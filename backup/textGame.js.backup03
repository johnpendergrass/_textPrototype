// Text Buffer System
let textBuffer = [];

// Initialize the buffer with sample game text
function initializeBuffer() {
  textBuffer = [
    {text: "SYSTEM INITIALIZATION COMPLETE", type: "command"},
    {text: "HALLOWEEN ADVENTURE SYSTEM V2.1", type: "command"},
    {text: "COPYRIGHT (C) 1982 MYSTERY SOFTWARE CORP.", type: "command"},
    {text: "", type: "flavor"},
    {text: "> LOADING ENVIRONMENT DATA...", type: "command"},
    {text: "> STREET MAP LOADED", type: "command"},
    {text: "> WEATHER: COLD AND WINDY", type: "command"},
    {text: "> TIME: 6:30 PM, OCTOBER 31ST", type: "command"},
    {text: "", type: "flavor"},
    {text: "You are standing on Elm Street. The autumn wind rustles", type: "flavor"},
    {text: "through bare tree branches overhead. Jack-o'-lanterns", type: "flavor"},
    {text: "grin from darkened porches. The smell of wood smoke", type: "flavor"},
    {text: "drifts from chimneys.", type: "flavor"},
    {text: "", type: "flavor"},
    {text: "A wrought iron gate creaks in the breeze to the NORTH.", type: "flavor"},
    {text: "The street continues EAST and WEST.", type: "flavor"},
    {text: "", type: "flavor"},
    {text: "> look north", type: "prompt"},
    {text: "", type: "flavor"},
    {text: "Through the iron bars you see a Victorian mansion", type: "flavor"},
    {text: "shrouded in shadows. A single light flickers in an", type: "flavor"},
    {text: "upstairs window. The brass nameplate reads 'RAVENCROFT'.", type: "flavor"},
    {text: "", type: "flavor"},
    {text: "> go north", type: "prompt"},
    {text: "", type: "flavor"},
    {text: "The gate is locked. You need to find another way in.", type: "flavor"},
    {text: "", type: "flavor"},
    {text: "> help", type: "prompt"},
    {text: "", type: "flavor"},
    {text: "Available commands:", type: "command"},
    {text: "  LOOK [direction] - Examine your surroundings", type: "command"},
    {text: "  GO [direction] - Move in a direction", type: "command"},
    {text: "  INVENTORY - Check what you're carrying", type: "command"},
    {text: "  TAKE [item] - Pick up an object", type: "command"},
    {text: "  USE [item] - Use an item from inventory", type: "command"},
    {text: "", type: "flavor"},
    {text: "> look east", type: "prompt"},
    {text: "", type: "flavor"},
    {text: "The street stretches into darkness. Streetlamps cast", type: "flavor"},
    {text: "eerie pools of yellow light. You can make out more", type: "flavor"},
    {text: "houses in the distance, their windows glowing warmly.", type: "flavor"},
    {text: "", type: "flavor"},
    {text: "> go east", type: "prompt"},
    {text: "", type: "flavor"},
    {text: "You walk down Elm Street. The houses here are smaller", type: "flavor"},
    {text: "but well-decorated for Halloween. Children in costumes", type: "flavor"},
    {text: "can be seen through lit windows.", type: "flavor"},
    {text: "", type: "flavor"},
    {text: "> knock on door", type: "prompt"},
    {text: "", type: "flavor"},
    {text: "You approach the nearest house. The porch light is on", type: "flavor"},
    {text: "and carved pumpkins line the steps. You knock on the", type: "flavor"},
    {text: "red wooden door.", type: "flavor"},
    {text: "", type: "flavor"},
    {text: "A friendly woman opens the door. 'Trick or treat!'", type: "flavor"},
    {text: "she says with a smile. 'Though you seem a bit old...'", type: "flavor"},
    {text: "She drops a candy bar into your bag anyway.", type: "flavor"},
    {text: "", type: "flavor"},
    {text: "> inventory", type: "prompt"},
    {text: "", type: "flavor"},
    {text: "You are carrying:", type: "command"},
    {text: "- A canvas trick-or-treat bag", type: "command"},
    {text: "- One chocolate candy bar", type: "command"},
    {text: "", type: "flavor"},
    {text: "> look west", type: "prompt"},
    {text: "", type: "flavor"},
    {text: "Back toward the mansion. You can still see that", type: "flavor"},
    {text: "mysterious light in the upstairs window.", type: "flavor"},
    {text: "", type: "flavor"},
    {text: "> _", type: "prompt"}
  ];

  updateDisplay();
}

// Update the text display (now shows all buffer content)
function updateDisplay() {
  const textDiv = document.querySelector(".text");
  
  // Convert buffer objects to HTML with appropriate classes
  const htmlLines = textBuffer.map(entry => {
    if (typeof entry === 'string') {
      // Handle legacy string entries
      return `<span class="flavor-text">${entry}</span>`;
    }
    
    let className;
    switch(entry.type) {
      case 'prompt':
        className = 'prompt-echo';
        break;
      case 'command':
        className = 'command-output';
        break;
      case 'flavor':
      default:
        className = 'flavor-text';
        break;
    }
    
    return `<span class="${className}">${entry.text}</span>`;
  });
  
  textDiv.innerHTML = htmlLines.join("<br>");
  
  // Auto-scroll to bottom when new content is added
  textDiv.scrollTop = textDiv.scrollHeight;
}

// Scroll up (PAGE UP) - now uses native scrolling
function scrollUp() {
  const textDiv = document.querySelector(".text");
  const lineHeight = parseInt(getComputedStyle(textDiv).lineHeight);
  textDiv.scrollTop -= lineHeight * 4; // Scroll up 4 lines
}

// Scroll down (PAGE DOWN) - now uses native scrolling
function scrollDown() {
  const textDiv = document.querySelector(".text");
  const lineHeight = parseInt(getComputedStyle(textDiv).lineHeight);
  textDiv.scrollTop += lineHeight * 4; // Scroll down 4 lines
}

// Add text to buffer (for commands and responses)
function addToBuffer(text, type = 'flavor') {
  if (Array.isArray(text)) {
    // If it's an array of strings, convert to objects
    const textObjects = text.map(line => ({
      text: line,
      type: type
    }));
    textBuffer.push(...textObjects);
  } else if (typeof text === 'object' && text.text !== undefined) {
    // Already an object with text and type
    textBuffer.push(text);
  } else {
    // Single string
    textBuffer.push({
      text: text,
      type: type
    });
  }

  // Update display with new content
  updateDisplay();
}

// Add command echo to buffer
function echoCommand(command) {
  addToBuffer([
    {text: "", type: "flavor"},
    {text: "> " + command, type: "prompt"},
    {text: "", type: "flavor"}
  ]);
}

// Initialize when page loads
document.addEventListener("DOMContentLoaded", function () {
  initializeBuffer();

  // Add keyboard event listener for PAGE UP/DOWN
  document.addEventListener("keydown", function (e) {
    if (e.key === "PageUp") {
      e.preventDefault();
      scrollUp();
    } else if (e.key === "PageDown") {
      e.preventDefault();
      scrollDown();
    }
  });
});